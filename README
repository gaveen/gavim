gavim - My Vim Configuration
============================

This is the Vim configuration I actually use. It should be usable
in any decent Linux system.


How to use
----------
1. Download the latest file from:
    https://github.com/downloads/gaveen/gavim/gavim.tar.xz
    Eg: $ wget -c is.gd/gavim_xz
2. Extract the downloaded XZ compressed tar file: gavim.tar.xz
    Eg: $ tar xJvf gavim.tar.xz
3. Rename the extracted 'gavim-xxxxxxxx' to 'gavim' if already isn't
    Eg: $ mv gavim-xxxxxxxx gavim
4. Then you can
  Either
  # place "gavim" somewhere else
    Eg: $ mv gavim ~/Apps/
    And,
    Link "gavim/.vim/" as "~/.vim"  and  "gavim/.vimrc" as "~/.vimrc"
    Eg:
        $ ln -s ~/Apps/gavim/.vim ~/.vim
        $ ln -s ~/Apps/gavim/.vimrc ~/.vimrc

  Or,

  # place .vim and .vimrc directly in your home directory
    Eg: $ cp -r gavim/* ~/


How to install (from source)
----------------------------
1. Clone this repository
2. In the cloned directory run:
   $ git submodule update --init
3. Delete conflicting snippets by running:
   $ rm -rf ./.vim/bundle/plugin-snipmate/snippets
4. Link (Eg: using ln -s) the following files:
  I)  .vim/ as ~/.vim
  II) .vimrc as ~/.vimrc


How to update (from source)
---------------------------
1. In the cloned directory run:
   $ git pull && git submodule update


Dependencies
------------
Having the following ready in your system should ensure a smooth
experience. Lack of them would *not* break vim though. You can
pick what you want to use.

  # vim and/or gvim - at least try to use version 7.2 or above.
    Package: Fedora family => vim-enhanced / vim-X11,
             Debian family => vim (not default) / vim-gnome
  # git - to clone and update this repository and submodules
    Package: Fedora family => git, Debian family => git-core
  # ack - a better grep alternative if you plan to use :Ack
    Package: Fedora family => ack, Debian family => ack-grep
      if you use a Debian family OS, uncomment necessary line in vimrc
  # python - if you plan to use the Conque Terminal i.e., <leader>t
    Package: Fedora family => python, Debian family => python
  # vim-latex - Vim LaTeX Suite plugin to use vim as a LaTeX/TeX IDE
    Package: Fedora family => vim-latex, Debian family => vim-latexsuite


Plugins
-------
These are the plugins I've included in this set of files.
  - ack (pattern matching) - :Ack pattern optional_path
  - auto-pairs (auto-complete matching pairs) - <F3> to toggle
  - bufexploreer (buffer explorer) - <leader>bb
  - conque (embedded terminal) - <leader>t
  - csapprox (use GUI colorchemes in terminal)
  - ctrlp (fuzzy find) - <ctrl>p
  - fugitive (Git wrapper)
  - gitv (gitk/gitg-like git commit viewer for fugitive)
  - guicolorscheme (CSApprox alternative) - :GuiColorScheme
  - matchit (pair matching) - %
  - nerdcommenter (commenting) - <leader>c<space>
  - nerdtree (file browser) - <leader>d
  - pandoc (pandoc editing)
  - pathogen (plugin bundle handling)
  - rails (for Ruby on Rails)
  - ruby-refactoring (for Ruby)
  - scratch (temporary buffer) - <leader>s
  - snipmate (snippets)
  - surround (easy working with matching pairs)
  - vcscommand (generic VCS frontend)


Newer Vim setups already have some great features like spell checking,
word completion, code folding, etc. A load of colorchemes are also
included (both light and dark themes) to choose from.

Credit should go to everyone who brought you vim, plugins, related
tools, documentation, provide help and more. Also a big thank you to
official vim docs, Vim Tips Wiki and #vim channel.

NOTE: uncomment line "let g:csa_Capable = 1" to explicitly say that
your vim is CSApprox capable even if :echo has('gui') returns 0.
